[
    {
        "id":1,
        "title":"Singleton Design Pattern",
        "question":"What is the objective of Singleton Design Pattern?",
        "answer-1":"Ensure a class has only one instance, and provide a global point of access to it.",
        "answer-2":"Specify the kinds of objects to create using a prototypical instance, and create new objects by copying this prototype.",
        "correct-answer":"answer-1"
    },
    {
        "id":2,
        "title":"Singleton Design Pattern",
        "question":"which criteria should be considered if we want to apply Singleton Design Pattern?",
        "answer-1":"Parse a complex representation, create one of several targets.",
        "answer-2":"Defining a virtual constructor.",
        "answer-3":"Lazy initialization is desirable",
        "correct-answer":"answer-3"
    },
    {
        "id":3,
        "title":"Prototype Design Pattern",
        "question":"What is the objective of Prototype Design Pattern?",
        "answer-1":"Application 'hard wires' the class of object to create in each 'new' expression.",
        "answer-2":"You want to add behavior or state to individual objects at run-time. Inheritance is not feasible because it is static and applies to an entire class.",
        "correct-answer":"answer-1"
    }

]