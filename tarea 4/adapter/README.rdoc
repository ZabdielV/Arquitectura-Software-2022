= Adapter pattern Pattern

This documentation was developed as part of a programming activity for
the <em>Software Design and Architecture</em> course (_Tc3049_), at the
Tecnológico de Monterrey, Campus Estado de México.

== Authors

* *A01377950* <em>Zabdiel Valentín Garduño Vivanco</em>
* *A01377942* <em>Luis Jonathan Rosas Ramos</em>
* *A01377072* <em>Emiliano Heredia García</em>

== Overview

The Adapter pattern, also known as Wrapper, its a way to allow interfaces to be used as another interface. 
There are various uses to this, such as allowing old code to be implemented in new or viceversa, making new code backwards compatible.
This is to avoid massive refactoring or meddling in code unnecesarly, facilitating reusability and flexibility.
Here we use a queue_adapter to wrap arround a simple queue.
Not only making it usable for the adapter_test that expects a different interface than the one provided by simple_queue, 
but also extends the functions of simple_queue.

To test the program, inside the +src+ folder type the following instruction
at the command line:

    ruby -I . -w adapter_test.rb

The UML class diagram is as follows.
rdoc-image:img/class_diagram.jpg

== References

- \M. Fowler. <em>UML Distilled: A Brief Guide to the Standard Object Modeling Language, 3rd Edition.</em>  Addison-Wesley, 2003.

- \E. Gamma, R. Helm, R. Johnson, J. M. Vlissides. <em>Design Patterns: Elements of Reusable Object-Oriented Software.</em> Addison-Wesley, 1994.

- \R. Olsen. <em>Design Patterns in Ruby.</em> Addison-Wesley, 2007.

- Ruby-Doc.org. <em>RDoc Markup Reference.</em> {\http://ruby-doc.org/stdlib-2.4.1/libdoc/rdoc/rdoc/RDoc/Markup.html}[http://ruby-doc.org/stdlib-2.4.1/libdoc/rdoc/rdoc/RDoc/Markup.html] Accessed September 24, 2022.
